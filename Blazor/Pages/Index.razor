@page "/"
@using Domain.Entities;
@using Helpers;
@using Microsoft.AspNetCore.Components.Forms;

@code{
    [Inject]
    private ApiCalls test{get; set;}
    private List<TodoItem> todoItems = new();

    public TodoItem NewTodo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        UpdateTodoList();
        NewTodo ??= new("","");

    }

    private async Task UpdateTodoList(){

        todoItems = await test.GetTodoItems();
        StateHasChanged();
    }

    private async void Submit()
    {
        await test.NewTodo(NewTodo);
        todoItems.Add(NewTodo);
        NewTodo = new TodoItem("", "");
        StateHasChanged();
    }

    private async void Delete(TodoItem todo)
    {
        await test.RemoveTodo(todo.Title);
        var toRemove = todoItems.FirstOrDefault(x => x.Title == todo.Title);
        if(toRemove != null)
        {
            todoItems.Remove(toRemove);
        }
        StateHasChanged();
    }

}
<div id="app">

    <h1>Todo App</h1>

    <EditForm Model="NewTodo" OnValidSubmit="Submit">
        <InputText @bind-Value="NewTodo.Title"></InputText>
        <InputTextArea @bind-Value="NewTodo.Description"></InputTextArea>
        <button type="submit">Create new</button>
    </EditForm>

    <ul>

        @foreach (var todoItem in todoItems)
        {
            <li>
                <h2>@todoItem.Title</h2>
                <p>@todoItem.Description</p>
                <button onclick="@(()=>Delete(todoItem))"> Remove Todo</button>
            </li>
        }
    </ul>


</div>
